/*
Deployment script for UCosmicTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
--:setvar DatabaseName "UCosmicTest"
--:setvar DefaultFilePrefix "UCosmicTest"
--:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"
--:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"

--GO
--:on error exit
--GO
--/*
--Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
--To re-enable the script after enabling SQLCMD mode, execute the following:
--SET NOEXEC OFF; 
--*/
--:setvar __IsSqlCmdEnabled "True"
--GO
--IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
--    BEGIN
--        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
--        SET NOEXEC ON;
--    END


--GO
USE [UCosmicTest];


GO
PRINT N'Dropping FK_ActivitiesV2.Activity_People.Person_PersonId...';


GO
ALTER TABLE [ActivitiesV2].[Activity] DROP CONSTRAINT [FK_ActivitiesV2.Activity_People.Person_PersonId];


GO
PRINT N'Dropping FK_ActivitiesV2.ActivityValues_ActivitiesV2.Activity_ActivityId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityValues] DROP CONSTRAINT [FK_ActivitiesV2.ActivityValues_ActivitiesV2.Activity_ActivityId];


GO
PRINT N'Dropping FK_ActivitiesV2.ActivityDocument_ActivitiesV2.ActivityValues_ActivityValuesId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityDocument] DROP CONSTRAINT [FK_ActivitiesV2.ActivityDocument_ActivitiesV2.ActivityValues_ActivityValuesId];


GO
PRINT N'Dropping FK_ActivitiesV2.ActivityDocument_Files.Image_ImageId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityDocument] DROP CONSTRAINT [FK_ActivitiesV2.ActivityDocument_Files.Image_ImageId];


GO
PRINT N'Dropping FK_ActivitiesV2.ActivityDocument_Files.LoadableFile_FileId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityDocument] DROP CONSTRAINT [FK_ActivitiesV2.ActivityDocument_Files.LoadableFile_FileId];


GO
PRINT N'Dropping FK_Employees.EmployeeActivityType_Employees.EmployeeModuleSettings_EmployeeModuleSettingsId...';


GO
ALTER TABLE [Employees].[EmployeeActivityType] DROP CONSTRAINT [FK_Employees.EmployeeActivityType_Employees.EmployeeModuleSettings_EmployeeModuleSettingsId];


GO
PRINT N'Dropping FK_ActivitiesV2.ActivityType_Employees.EmployeeActivityType_TypeId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityType] DROP CONSTRAINT [FK_ActivitiesV2.ActivityType_Employees.EmployeeActivityType_TypeId];


GO
PRINT N'Starting rebuilding table [ActivitiesV2].[Activity]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [ActivitiesV2].[tmp_ms_xx_Activity] (
    [RevisionId]         INT              IDENTITY (1, 1) NOT NULL,
    [PersonId]           INT              NOT NULL,
    [Number]             INT              NOT NULL,
    [Mode]               NVARCHAR (20)    NOT NULL,
    [EditSourceId]       INT              NULL,
    [EntityId]           UNIQUEIDENTIFIER NOT NULL,
    [CreatedOnUtc]       DATETIME         NOT NULL,
    [CreatedByPrincipal] NVARCHAR (256)   NULL,
    [UpdatedOnUtc]       DATETIME         NULL,
    [UpdatedByPrincipal] NVARCHAR (256)   NULL,
    [Version]            ROWVERSION       NOT NULL,
    [IsCurrent]          BIT              NOT NULL,
    [IsArchived]         BIT              NOT NULL,
    [IsDeleted]          BIT              NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ActivitiesV2.Activity] PRIMARY KEY CLUSTERED ([RevisionId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [ActivitiesV2].[Activity])
    BEGIN
        SET IDENTITY_INSERT [ActivitiesV2].[tmp_ms_xx_Activity] ON;
        INSERT INTO [ActivitiesV2].[tmp_ms_xx_Activity] ([RevisionId], [PersonId], [Number], [Mode], [EntityId], [CreatedOnUtc], [CreatedByPrincipal], [UpdatedOnUtc], [UpdatedByPrincipal], [IsCurrent], [IsArchived], [IsDeleted])
        SELECT   [RevisionId],
                 [PersonId],
                 [Number],
                 [Mode],
                 [EntityId],
                 [CreatedOnUtc],
                 [CreatedByPrincipal],
                 [UpdatedOnUtc],
                 [UpdatedByPrincipal],
                 [IsCurrent],
                 [IsArchived],
                 [IsDeleted]
        FROM     [ActivitiesV2].[Activity]
        ORDER BY [RevisionId] ASC;
        SET IDENTITY_INSERT [ActivitiesV2].[tmp_ms_xx_Activity] OFF;
    END

DROP TABLE [ActivitiesV2].[Activity];

EXECUTE sp_rename N'[ActivitiesV2].[tmp_ms_xx_Activity]', N'Activity';

EXECUTE sp_rename N'[ActivitiesV2].[tmp_ms_xx_constraint_PK_ActivitiesV2.Activity]', N'PK_ActivitiesV2.Activity', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [ActivitiesV2].[Activity].[IX_PersonId]...';


GO
CREATE NONCLUSTERED INDEX [IX_PersonId]
    ON [ActivitiesV2].[Activity]([PersonId] ASC);


GO
PRINT N'Starting rebuilding table [ActivitiesV2].[ActivityDocument]...';


GO
/*
The column Title on table [ActivitiesV2].[ActivityDocument] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

--IF EXISTS (select top 1 1 from [ActivitiesV2].[ActivityDocument])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [ActivitiesV2].[tmp_ms_xx_ActivityDocument] (
    [RevisionId]         INT              IDENTITY (1, 1) NOT NULL,
    [ActivityValuesId]   INT              NOT NULL,
    [FileId]             INT              NULL,
    [ImageId]            INT              NULL,
    [Mode]               NVARCHAR (20)    NOT NULL,
    [Title]              NVARCHAR (64)    NOT NULL,
    [Visible]            BIT              NOT NULL,
    [EntityId]           UNIQUEIDENTIFIER NOT NULL,
    [CreatedOnUtc]       DATETIME         NOT NULL,
    [CreatedByPrincipal] NVARCHAR (256)   NULL,
    [UpdatedOnUtc]       DATETIME         NULL,
    [UpdatedByPrincipal] NVARCHAR (256)   NULL,
    [Version]            ROWVERSION       NOT NULL,
    [IsCurrent]          BIT              NOT NULL,
    [IsArchived]         BIT              NOT NULL,
    [IsDeleted]          BIT              NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ActivitiesV2.ActivityDocument] PRIMARY KEY CLUSTERED ([RevisionId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [ActivitiesV2].[ActivityDocument])
    BEGIN
        SET IDENTITY_INSERT [ActivitiesV2].[tmp_ms_xx_ActivityDocument] ON;
        INSERT INTO [ActivitiesV2].[tmp_ms_xx_ActivityDocument] ([RevisionId], [ActivityValuesId], [FileId], [ImageId], [Mode], [Title], [Visible], [EntityId], [CreatedOnUtc], [CreatedByPrincipal], [UpdatedOnUtc], [UpdatedByPrincipal], [IsCurrent], [IsArchived], [IsDeleted])
        SELECT   [RevisionId],
                 [ActivityValuesId],
                 [FileId],
                 [ImageId],
                 [Mode],
                 [Title],
                 [Visible],
                 [EntityId],
                 [CreatedOnUtc],
                 [CreatedByPrincipal],
                 [UpdatedOnUtc],
                 [UpdatedByPrincipal],
                 [IsCurrent],
                 [IsArchived],
                 [IsDeleted]
        FROM     [ActivitiesV2].[ActivityDocument]
        ORDER BY [RevisionId] ASC;
        SET IDENTITY_INSERT [ActivitiesV2].[tmp_ms_xx_ActivityDocument] OFF;
    END

DROP TABLE [ActivitiesV2].[ActivityDocument];

EXECUTE sp_rename N'[ActivitiesV2].[tmp_ms_xx_ActivityDocument]', N'ActivityDocument';

EXECUTE sp_rename N'[ActivitiesV2].[tmp_ms_xx_constraint_PK_ActivitiesV2.ActivityDocument]', N'PK_ActivitiesV2.ActivityDocument', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [ActivitiesV2].[ActivityDocument].[IX_FileId]...';


GO
CREATE NONCLUSTERED INDEX [IX_FileId]
    ON [ActivitiesV2].[ActivityDocument]([FileId] ASC);


GO
PRINT N'Creating [ActivitiesV2].[ActivityDocument].[IX_ImageId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ImageId]
    ON [ActivitiesV2].[ActivityDocument]([ImageId] ASC);


GO
PRINT N'Creating [ActivitiesV2].[ActivityDocument].[IX_ActivityValuesId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ActivityValuesId]
    ON [ActivitiesV2].[ActivityDocument]([ActivityValuesId] ASC);


GO
PRINT N'Starting rebuilding table [Employees].[EmployeeActivityType]...';


GO
/*
The column [Employees].[EmployeeActivityType].[Rank] on table [Employees].[EmployeeActivityType] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

--IF EXISTS (select top 1 1 from [Employees].[EmployeeActivityType])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Employees].[tmp_ms_xx_EmployeeActivityType] (
    [Id]                       INT            IDENTITY (1, 1) NOT NULL,
    [Type]                     NVARCHAR (128) NOT NULL,
    [Rank]                     INT            NOT NULL,
    [EmployeeModuleSettingsId] INT            NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Employees.EmployeeActivityType] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Employees].[EmployeeActivityType])
    BEGIN
        SET IDENTITY_INSERT [Employees].[tmp_ms_xx_EmployeeActivityType] ON;
        INSERT INTO [Employees].[tmp_ms_xx_EmployeeActivityType] ([Id], [Type], [Rank], [EmployeeModuleSettingsId])
        SELECT   [Id],
                 [Type],
                 0,
                 [EmployeeModuleSettingsId]
        FROM     [Employees].[EmployeeActivityType]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [Employees].[tmp_ms_xx_EmployeeActivityType] OFF;
    END

DROP TABLE [Employees].[EmployeeActivityType];

EXECUTE sp_rename N'[Employees].[tmp_ms_xx_EmployeeActivityType]', N'EmployeeActivityType';

EXECUTE sp_rename N'[Employees].[tmp_ms_xx_constraint_PK_Employees.EmployeeActivityType]', N'PK_Employees.EmployeeActivityType', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
UPDATE [Employees].[EmployeeActivityType] SET [Type] = N'Conference Presentation or Proceeding', [Rank] = 4 WHERE [Id] = 1
UPDATE [Employees].[EmployeeActivityType] SET [Type] = N'Research or Creative Endeavor', [Rank] = 1 WHERE [Id] = 2
UPDATE [Employees].[EmployeeActivityType] SET [Type] = N'Teaching or Mentoring', [Rank] = 2 WHERE [Id] = 3
UPDATE [Employees].[EmployeeActivityType] SET [Type] = N'Professional Development, Service or Consulting', [Rank] = 5 WHERE [Id] = 4
UPDATE [Employees].[EmployeeActivityType] SET [Type] = N'Award or Honor', [Rank] = 3 WHERE [Id] = 5

PRINT N'Creating [Employees].[EmployeeActivityType].[IX_EmployeeModuleSettingsId]...';


GO
CREATE NONCLUSTERED INDEX [IX_EmployeeModuleSettingsId]
    ON [Employees].[EmployeeActivityType]([EmployeeModuleSettingsId] ASC);


GO
PRINT N'Creating FK_ActivitiesV2.Activity_People.Person_PersonId...';


GO
ALTER TABLE [ActivitiesV2].[Activity] WITH NOCHECK
    ADD CONSTRAINT [FK_ActivitiesV2.Activity_People.Person_PersonId] FOREIGN KEY ([PersonId]) REFERENCES [People].[Person] ([RevisionId]);


GO
PRINT N'Creating FK_ActivitiesV2.ActivityValues_ActivitiesV2.Activity_ActivityId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityValues] WITH NOCHECK
    ADD CONSTRAINT [FK_ActivitiesV2.ActivityValues_ActivitiesV2.Activity_ActivityId] FOREIGN KEY ([ActivityId]) REFERENCES [ActivitiesV2].[Activity] ([RevisionId]) ON DELETE CASCADE;


GO
PRINT N'Creating FK_ActivitiesV2.ActivityDocument_ActivitiesV2.ActivityValues_ActivityValuesId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityDocument] WITH NOCHECK
    ADD CONSTRAINT [FK_ActivitiesV2.ActivityDocument_ActivitiesV2.ActivityValues_ActivityValuesId] FOREIGN KEY ([ActivityValuesId]) REFERENCES [ActivitiesV2].[ActivityValues] ([RevisionId]) ON DELETE CASCADE;


GO
PRINT N'Creating FK_ActivitiesV2.ActivityDocument_Files.Image_ImageId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityDocument] WITH NOCHECK
    ADD CONSTRAINT [FK_ActivitiesV2.ActivityDocument_Files.Image_ImageId] FOREIGN KEY ([ImageId]) REFERENCES [Files].[Image] ([Id]);


GO
PRINT N'Creating FK_ActivitiesV2.ActivityDocument_Files.LoadableFile_FileId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityDocument] WITH NOCHECK
    ADD CONSTRAINT [FK_ActivitiesV2.ActivityDocument_Files.LoadableFile_FileId] FOREIGN KEY ([FileId]) REFERENCES [Files].[LoadableFile] ([Id]);


GO
PRINT N'Creating FK_Employees.EmployeeActivityType_Employees.EmployeeModuleSettings_EmployeeModuleSettingsId...';


GO
ALTER TABLE [Employees].[EmployeeActivityType] WITH NOCHECK
    ADD CONSTRAINT [FK_Employees.EmployeeActivityType_Employees.EmployeeModuleSettings_EmployeeModuleSettingsId] FOREIGN KEY ([EmployeeModuleSettingsId]) REFERENCES [Employees].[EmployeeModuleSettings] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating FK_ActivitiesV2.ActivityType_Employees.EmployeeActivityType_TypeId...';


GO
ALTER TABLE [ActivitiesV2].[ActivityType] WITH NOCHECK
    ADD CONSTRAINT [FK_ActivitiesV2.ActivityType_Employees.EmployeeActivityType_TypeId] FOREIGN KEY ([TypeId]) REFERENCES [Employees].[EmployeeActivityType] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
--USE [$(DatabaseName)];


--GO
ALTER TABLE [ActivitiesV2].[Activity] WITH CHECK CHECK CONSTRAINT [FK_ActivitiesV2.Activity_People.Person_PersonId];

ALTER TABLE [ActivitiesV2].[ActivityValues] WITH CHECK CHECK CONSTRAINT [FK_ActivitiesV2.ActivityValues_ActivitiesV2.Activity_ActivityId];

ALTER TABLE [ActivitiesV2].[ActivityDocument] WITH CHECK CHECK CONSTRAINT [FK_ActivitiesV2.ActivityDocument_ActivitiesV2.ActivityValues_ActivityValuesId];

ALTER TABLE [ActivitiesV2].[ActivityDocument] WITH CHECK CHECK CONSTRAINT [FK_ActivitiesV2.ActivityDocument_Files.Image_ImageId];

ALTER TABLE [ActivitiesV2].[ActivityDocument] WITH CHECK CHECK CONSTRAINT [FK_ActivitiesV2.ActivityDocument_Files.LoadableFile_FileId];

ALTER TABLE [Employees].[EmployeeActivityType] WITH CHECK CHECK CONSTRAINT [FK_Employees.EmployeeActivityType_Employees.EmployeeModuleSettings_EmployeeModuleSettingsId];

ALTER TABLE [ActivitiesV2].[ActivityType] WITH CHECK CHECK CONSTRAINT [FK_ActivitiesV2.ActivityType_Employees.EmployeeActivityType_TypeId];


GO
PRINT N'Update complete.';


GO

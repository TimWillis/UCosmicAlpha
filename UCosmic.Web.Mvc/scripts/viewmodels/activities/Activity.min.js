var ViewModels;(function(n){(function(n){var t=function(){function n(n){this.locations=ko.observableArray(),this.selectedLocations=ko.observableArray(),this.activityTypes=ko.observableArray(),this.id=ko.observable(n)}return n.prototype.load=function(){var n=this,r=$.Deferred(),u=$.Deferred(),t,i;return $.get(App.Routes.WebApi.Activities.Locations.get()).done(function(n){u.resolve(n)}).fail(function(n,t,i){u.reject(n,t,i)}),t=$.Deferred(),$.get(App.Routes.WebApi.Employees.ModuleSettings.ActivityTypes.get()).done(function(n){t.resolve(n)}).fail(function(n,i,r){t.reject(n,i,r)}),i=$.Deferred(),$.ajax({type:"GET",url:App.Routes.WebApi.Activity.get()+this.id().toString(),success:function(n){i.resolve(n)},error:function(n,t,r){i.reject(n,t,r)}}),$.when(t,u,i).done(function(t,i,u){var e,f;for(ko.mapping.fromJS(i,{},n.locations),e={startsOn:{create:function(n){return ko.observable(moment(n.data).toDate())}},endsOn:{create:function(n){return ko.observable(moment(n.data).toDate())}}},ko.mapping.fromJS(u,e,n),ko.mapping.fromJS(t,{},n.activityTypes),f=0;f<n.values.locations().length;f+=1)n.selectedLocations.push(n.values.locations()[f].placeId());for(f=0;f<n.activityTypes().length;f+=1)n.activityTypes()[f].checked=ko.computed(n.defHasActivityTypeCallback(f));r.resolve()}).fail(function(n,t,i){r.reject(n,t,i)}),r},n.prototype.addActivityType=function(n){var i=this.getActivityTypeIndexById(n),t;i==-1&&(t=ko.mapping.fromJS({id:0,typeId:n}),this.values.types.push(t))},n.prototype.removeActivityType=function(n){var t=this.getActivityTypeIndexById(n),i;t!=-1&&(i=this.values.types()[t],this.values.types.remove(i))},n.prototype.getTypeName=function(n){var t="",i=this.getActivityTypeIndexById(n);return i!=-1&&(t=this.activityTypes[i].type),t},n.prototype.getActivityTypeIndexById=function(n){var i=-1,t;if(this.values.types!=null&&this.values.types().length>0){for(t=0;t<this.values.types().length&&n!=this.values.types()[t].typeId();)t+=1;t<this.values.types().length&&(i=t)}return i},n.prototype.hasActivityType=function(n){return this.getActivityTypeIndexById(n)!=-1},n.prototype.defHasActivityTypeCallback=function(n){var t=this;return{read:function(){return t.hasActivityType(t.activityTypes()[n].id())},write:function(t){t?this.addActivityType(this.activityTypes()[n].id()):this.removeActivityType(this.activityTypes()[n].id())},owner:this}},n.prototype.updateLocations=function(n){var t,i;for(this.values.locations=ko.observableArray(),t=0;t<n.length;t+=1)i=ko.mapping.fromJS({id:0,placeId:n[t]}),this.values.locations.push(i)},n}();n.Activity=t})(n.Activities||(n.Activities={}));var t=n.Activities})(ViewModels||(ViewModels={}))
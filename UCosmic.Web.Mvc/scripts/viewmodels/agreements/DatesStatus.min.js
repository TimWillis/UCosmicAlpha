var Agreements;(function(n){var t=function(){function n(n){this.startDate=ko.observable();this.expDate=ko.observable();this.isEstimated=ko.observable();this.autoRenew=ko.observable(2);this.$statusOptions=ko.observable();this.statusOptions=ko.mapping.fromJS([]);this.statusOptionSelected=ko.observable();this.isCustomStatusAllowed=n;this._setupValidation()}return n.prototype._setupValidation=function(){ko.validation.rules.greaterThan={validator:function(n,t){return t()==undefined?!0:Globalize.parseDate(n)>Globalize.parseDate(t())},message:"The field must be greater than start date"};ko.validation.rules.date.validator=function(n,t){return!n.length||t&&Globalize.parseDate(n)!=null};ko.validation.registerExtenders();this.validateEffectiveDatesCurrentStatus=ko.validatedObservable({startDate:this.startDate.extend({required:{message:"Start date is required."},date:{message:"Start date must valid."},maxLength:50}),expDate:this.expDate.extend({required:{message:"Expiration date is required."},date:{message:"Expiration date must valid."},maxLength:50,greaterThan:this.startDate}),autoRenew:this.autoRenew.extend({required:{message:"Auto renew is required."}}),statusOptionSelected:this.statusOptionSelected.extend({required:{message:"Current Status is required."}})})},n.prototype.bindJquery=function(){this.isCustomStatusAllowed?$("#status_options").kendoComboBox({dataTextField:"name",dataValueField:"id",dataSource:new kendo.data.DataSource({data:this.statusOptions()})}):$("#status_options").kendoDropDownList({dataTextField:"name",dataValueField:"id",dataSource:new kendo.data.DataSource({data:this.statusOptions()})})},n}();n.DatesStatus=t})(Agreements||(Agreements={}));
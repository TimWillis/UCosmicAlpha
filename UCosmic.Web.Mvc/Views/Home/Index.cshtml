@using UCosmic.Web.Mvc.Models
@model List<HomeSectionApiModelReturn>
<link rel="import" href="~/components/form/inputs/button/button.html">
<link rel="import" href="~/components/pages/Home/indexHasDomain/IndexHasDomainBase.html">
<link rel="import" href="~/components/pages/Home/indexHasDomain/IndexHasDomainCustom.html">
<link rel="import" href="~/components/pages/Home/indexHasDomain/IndexHasDomainEdit.html">
@{
    ViewBag.Title = "Home";
    var tenancy = Request.Tenancy();
    var styleDomain = tenancy != null ? tenancy.StyleDomain : "default";
    var hasStyleDomain = !string.IsNullOrWhiteSpace(styleDomain) && !"default".Equals(styleDomain, StringComparison.OrdinalIgnoreCase);
}

@section bib { }

<div class="fixed content" data-current-module="home">

    @if (!hasStyleDomain)
    {
        <header>
            <h1>Choose your institution</h1>
        </header>
        Html.RenderAction(MVC.Admin.TenantLogos(false));
    }
    else
    {
        <polymer-content-home-has-domain-base styledomain="@styleDomain"></polymer-content-home-has-domain-base>

    <polymer-content-home-index flashertext="@ViewBag.alert" flasherisdisabled="@ViewBag.alertIsDisabled" homesections="@Html.Raw(Html.SerializeObject(Model))"></polymer-content-home-index>
        

    <polymer-element name="polymer-content-home-index" attributes="homeSections flashertext flasherisdisabled">
        <template>
            <polymer-content-home-has-domain-custom homesections="{{homeSections}}" canedit="false"></polymer-content-home-has-domain-custom>
        </template>
        <script src="~/components/pages/Home/index.js"></script>
    </polymer-element>
    }
</div>

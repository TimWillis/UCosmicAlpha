@{ var routeWriter = new JavascriptRouteWriter(); }

@* API ROUTES *@
var Routes = Routes || {};
Routes.Api = Routes.Api || {};

@* EMPLOYEES *@
Routes.Api.Employees = Routes.Api.Employees || {};

Routes.Api.Employees.places = function (tenantId) {
    if (typeof tenantId === 'number')
        return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
        {
            controller = "Employees",
            action = "GetPlaces",
            establishmentId = routeWriter.Value<int>(0),
        }))'.format(tenantId);

    return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
    {
        controller = "Employees",
        action = "GetPlaces",
        domain = routeWriter.Value<string>(0),
    }))'.format(tenantId);
};

@* ACTIVITIES *@
Routes.Api.Employees.Activities = Routes.Api.Employees.Activities || {};

Routes.Api.Employees.Activities.counts = function (tenantId) {
    if (typeof tenantId === 'number')
        return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
        {
            controller = "Employees",
            action = "GetActivityCounts",
            establishmentId = routeWriter.Value<int>(0),
        }))'.format(tenantId);

    return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
    {
        controller = "Employees",
        action = "GetActivityCounts",
        domain = routeWriter.Value<string>(0),
    }))'.format(tenantId);
};

@* SETTINGS *@
Routes.Api.Employees.Settings = Routes.Api.Employees.Settings || {};

Routes.Api.Employees.Settings.byPerson = function (personId) {
    if (!personId) {
        return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
            {
                controller = "EmployeeSettings",
                action = "GetByPerson",
            }))';
    }
    return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
    {
        controller = "EmployeeSettings",
        action = "GetByPerson",
        personId = routeWriter.Value<int>(0),
    }))'.format(personId);
};

Routes.Api.Employees.Settings.icon = function (domain, iconName) {
    return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
    {
        controller = "Employees",
        action = "GetSettingsIcon",
        domain = routeWriter.Value<string>(0),
        name = routeWriter.Value<string>(1),
    }))'.format(domain, iconName);
};

@* SETTINGS ACTIVITY TYPES *@
Routes.Api.Employees.Settings.ActivityTypes = Routes.Api.Employees.Settings.ActivityTypes || {};

Routes.Api.Employees.Settings.ActivityTypes.icon = function (activityTypeId) {
    return '@routeWriter.WriteRoute(Url.HttpRouteUrl(null, new
    {
        controller = "Employees",
        action = "GetSettingsActivityTypeIcon",
        typeId = routeWriter.Value<int>(0),
    }))'.format(activityTypeId);
};



@* MVC ROUTES *@
Routes.Mvc = Routes.Mvc || {};
Routes.Mvc.Employees = Routes.Mvc.Employees || {};
Routes.Mvc.Employees.Activities = Routes.Mvc.Employees.Activities || {};
Routes.Mvc.Employees.Activities.edit = function (activityId) {
    return '@routeWriter.WriteRoute(Url.RouteUrl(new
    {
        controller = MVC.Activities.Name,
        action = MVC.Activities.ActionNames.Edit,
        activityId = routeWriter.Value<int>(0),
    }))'.format(activityId);
};
Routes.Mvc.Employees.Activities.byPerson = function (personId) {
    return '@routeWriter.WriteRoute(Url.RouteUrl(new
    {
        controller = MVC.People.Name,
        action = MVC.People.ActionNames.Activities,
        personId = routeWriter.Value<int>(0),
    }))'.format(personId);
};
Routes.Mvc.Employees.Activities.detail = function (activityId) {
    return '@routeWriter.WriteRoute(Url.RouteUrl(new
    {
        controller = MVC.Activities.Name,
        action = MVC.Activities.ActionNames.Details,
        activityId = routeWriter.Value<int>(0),
    }))'.format(activityId);
};



Routes.Mvc.Employees.Degrees = Routes.Mvc.Employees.Degrees || {};
Routes.Mvc.Employees.Degrees.detail = function (personId) {
    return '@routeWriter.WriteRoute(Url.RouteUrl(new
    {
        controller = MVC.People.Name,
        action = MVC.People.ActionNames.Degrees,
        personId = routeWriter.Value<int>(0),
    }))'.format(personId);
};



Routes.Mvc.Employees.GeographicExpertise = Routes.Mvc.Employees.GeographicExpertise || {};
Routes.Mvc.Employees.GeographicExpertise.detail = function (personId) {
    return '@routeWriter.WriteRoute(Url.RouteUrl(new
    {
        controller = MVC.People.Name,
        action = MVC.People.ActionNames.GlobalExpertises,
        personId = routeWriter.Value<int>(0),
    }))'.format(personId);
};

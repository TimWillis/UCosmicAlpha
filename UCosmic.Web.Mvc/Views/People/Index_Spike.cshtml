@using Links
@model UCosmic.Web.Mvc.Models.PersonViewModel
@{
    ViewBag.Title = "UCosmic Profile";
}
@section bib
{
    <nav class="bib hide" data-current-bib="faculty">
        @Html.Partial(MVC.Activities.Views._Bib)
    </nav>
}
@section scripts
{
    @if (User.Identity.Name.Equals(Model.Username, StringComparison.OrdinalIgnoreCase))
    {
        <script>
            @{Html.RenderPartial(MVC.JavaScriptRoutes.Views.Establishments);}
            @{Html.RenderPartial(MVC.JavaScriptRoutes.Views.Employees);}
            @{Html.RenderPartial(MVC.JavaScriptRoutes.Views.People);}
        </script>
        <script src="~/scripts/oss/linq.js"></script>
        <script src="~/scripts/app/DataCacher.js"></script>

        <script src="~/scripts/app/FormSelect.js"></script>

        <script src="~/scripts/viewmodels/establishments/Server.js"></script>

        <script src="~/scripts/viewmodels/employees/Server.js"></script>
        <script src="~/scripts/viewmodels/people/Server.js"></script>

        @*<script type="text/javascript">
                var modelData = $.parseJSON('@Html.Raw(Json.Encode(Model))');
            </script>*@

        @Scripts.Render("~/bundles/people/profileEditor")

        @*<script type="text/javascript">
                var viewModel = new People.ViewModels.ProfileSpike(modelData);
                ko.applyBindings(viewModel, $('#main')[0]);
            </script*@
        <script type="text/javascript">

            $(function () {
                var profileViewModel = new People.ViewModels.ProfileSpike('@ViewBag.PersonId');
                ko.applyBindings(profileViewModel, $('#affiliations')[0]);
                profileViewModel.bindJquery();
            });

        </script>
    }
}
@section styles
{
    <style>
        .comma-list {
            display: inline;
        }

            .comma-list:after {
                content: ', ';
            }

            .comma-list:last-child:after {
                content: '';
            }
    </style>
}
<div class="content fixed to-top" data-current-module="faculty">
    <div class="group">
        <div class="on-left from-top">
            <header>
                <h1>
                    UCosmic Profile
                </h1>
            </header>
            @* CARD *@
            <section class="person-profile">
                @*data-bind="click: startEditing, css: { clickable: !editMode() }">*@
                <div class="card">
                    @Html.Action(MVC.People.GetCard())
                </div>
                <div class="action">
                    Click to edit
                </div>
            </section>
            @* AFFILIATIONS *@
            <section class="content fixed to-top" id="affiliations">
                @Html.Action(MVC.People.GetAffiliations())
                @if (User.Identity.Name.Equals(Model.Username, StringComparison.OrdinalIgnoreCase))
                {
                    @* EDIT AFFILIATIONS *@
                    <section>
                        @*<legend>Edit @customProfileTitle</legend>*@
                        @Html.Partial(MVC.People.Views._AffiliationsEditor)
                    </section>
                }
            </section>
            @* CONTACT INFORMATION *@
            @Html.Action(MVC.People.GetEmails())
        </div>
        <aside class="on-right from-top" data-fixed-scroll="root">
            <div data-fixed-scroll="anchor"></div>
            <div data-fixed-scroll="content">
                @Html.Partial(MVC.People.Views._SidebarNav)
            </div>
        </aside>

    </div>
</div>


 @model UCosmic.Web.Mvc.Models.GeographicExpertiseModel

@{
    ViewBag.Title = "My Geographic Expertise";
}

@section styles
{
    <style>
    .non-required-field
    {
        width: 120px;
        display:inline-block;
        text-align: right;
        vertical-align: inherit;
    }        
    .required-field
    {
        width: 120px;
        display:inline-block;
        text-align: right;
        vertical-align: inherit;
    }
    .required-field::after {
        content: "*";
        font-size: large;
        vertical-align: text-top;
        color: red;
    }
    </style>
}

@section scripts
{
    @Scripts.Render("~/bundles/geographicExpertise")

    <script type="text/javascript">
        $(function() {
            var expertiseId = "@Model.ExpertiseId";
            var expertiseViewModel = new ViewModels.GeographicExpertises.GeographicExpertise(expertiseId);
            expertiseViewModel.load()
                .done(function() {

                    expertiseViewModel.setupWidgets("location");
                    expertiseViewModel.setupValidation();
                    ko.applyBindings(expertiseViewModel, $("#geographic-expertise-edit")[0]);

                    var locationSelector = $( "#location" ).data( "kendoMultiSelect" );
                    locationSelector.setDataSource( new kendo.data.DataSource({
                        serverFiltering: true,
                        transport: {
                            read: function(options) {
                                $.ajax({
                                    url: App.Routes.WebApi.Places.get(),
                                    
                                    /*
                                        Bug - There's a bug in KendoUI Multiselect whereby the datasource.read()
                                        gets called as soon as the widget gets focus.  This is bad as the Place
                                        service will response with all the Places in the DB since there is no 
                                        filter being provided.  Our workaround is to trap the empty filter
                                        and send a special character for the service to ignore.  Also,
                                        If options.success() is not actually call, the widget stops functioning
                                        altogether.
                                    */
                                    data: {
                                        keyword: ((options.data.filter != null) &&
                                            (options.data.filter.filters != null) &&
                                            (options.data.filter.filters.length > 0) &&
                                            (options.data.filter.filters[0].value != null)) ?
                                            options.data.filter.filters[0].value : "~"
                                    },
                                    success: function(results) {
                                        options.success(results);
                                    }
                                });
                            }
                        }
                    }) );

                })
            .fail(function(jqXhr, textStatus, errorThrown) {
            alert(textStatus + "|" + errorThrown);
        });
        });

    </script>
}

@section bib
{
    <nav class="bib hide" data-current-bib="my">
        @Html.Partial(MVC.Home.Views._Bib)
    </nav>
}

<div class="content fixed to-top" data-current-module="home">
    <div data-side-swiper="root">
        <div data-side-swiper="deck">
            <div data-side-swiper="on">
                <div class="group">
                    <div id="geographic-expertise-edit" class="on-left from-top" style="width: 100%;">
				        
                        <header>
                            <h1>@ViewBag.Title</h1>
                        </header>

                        <div style="margin-bottom: 38px">

                            <!-- LOCATONS -->
                            <div style="margin-bottom: 14px; display: inline-block; vertical-align: middle">
                                <label for="location" class="required-field">Locations</label>
                                <div style="display: inline-block; vertical-align: middle">
                                    <select id="location" style="width: 600px; overflow-y:auto"></select>
                                </div>
                            </div>
                            <span data-bind="validationMessage: locations" class="validationMessage"></span>
                            
                            <!-- DESCRIPTION -->
                            <div>
                                <span style="display: inline-block; vertical-align: middle">
                                    <label for="title" class="non-required-field">Description</label>
                                    <textarea rows="4" id="title" style="vertical-align: inherit;  width: 600px; margin-right: 8px" data-bind="value: description"></textarea>
                                </span>
                            </div>

                        </div>
                            
                        <!-- BUTTONS -->
                        <div style="margin-bottom: 32px" data-bind="template: { name: 'buttons-template'}"></div>

                        <!-- LAST UPDATED -->
                        <div style="width: 50%; height: 1.5em; border-top: 1px; border-style: solid">
                            <span style="font-size:smaller; color:slategray">
                                <span>Last updated</span>
                                <label id="last-updated-date" data-bind="text: (whenLastUpdated() != null) ? moment(whenLastUpdated()).format('MM/DD/YYYY') : ''"></label>
                                <span> by </span>
                                <label id="last-updated-name" data-bind="text: whoLastUpdated()"></label>
                            </span>
                        </div>
                    </div>                      
                </div>
            </div>
        </div>
    </div>
</div>

                  
<!-- JQUERY DIALOGS -->
<div id="cancelConfirmDialog" class="dialog" title="Confirm Cancel">
    <div>By cancelling, you will lose all changes.</div>
    <div style="font-weight: bold">Are you sure you want to Cancel editing this expertise?</div>
</div>


<!-- KNOCKOUT TEMPLATES -->
<script type="text/html" id="buttons-template">
    <span>
        <input type="button" value="Save" data-bind="click: function (item, event) { save(item, event, 'Save'); }, clickBubble: false"/>
        <input type="button" value="Guide Me" style="margin-left: 50px"/>
        <input type="button" value="Cancel" style="float: right; margin-right: 240px" data-bind="click: function (item, event) { cancel(item, event); }, clickBubble: false"/>
    </span>
</script>
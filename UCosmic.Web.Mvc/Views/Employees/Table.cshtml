@using System.Globalization
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@using UCosmic.Web.Mvc.Models

@model ActivitySearchModel

@{
    ViewBag.Title = "Search Activities";
    var jsonSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
}



@section bib
{
    <nav class="bib hide" data-current-bib="search">
        @Html.Partial(MVC.Employees.Views._Bib)
    </nav>
}



@section scripts
{
    <script src="~/scripts/oss/linq.js"></script>
    <script src="~/scripts/viewmodels/activities/Search.js"></script>
    <script>
        var settings = {
            input: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Input, jsonSettings))'),
            countryOptions: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.CountryOptions, jsonSettings))'),
        };
        var viewModel = new Activities.ViewModels.Search(settings);
        viewModel.applyBindings(document.getElementById('activity_search_form'));
    </script>
}



<div class="content fixed to-top" data-current-module="employees">
    <form class="group" method="GET" id="activity_search_form">
        <div class="on-left from-top">
            <header>
                <h1>
                    @ViewBag.Title
                </h1>
            </header>
            <div>
                @* KEYWORD TEXT BOX *@
                <div class="field" style="margin-bottom: 0;">
                    <input type="search" value="@Model.Input.Keyword" placeholder="Find an activity by keyword." name="keyword"
                           data-bind="event: { search: onKeywordInputSearchEvent }" style="width: 588px; margin-right: 12px" />
                    <input type="submit" value="Search" title="Click here or press the enter key to search." />
                </div>

                @* PAGER STATUS *@
                @if (Model != null && Model.Output.Items.Any())
                {
                    <div style="height: 24px; margin: 1em 0;">
                        <div>
                            <strong>
                                Showing <span>@Model.Output.FirstNumber</span>
                                @if (@Model.Output.PageCount > 0)
                                {
                                    <span>- <span>@Model.Output.LastNumber</span></span>
                                }
                                of <span>@Model.Output.ItemTotal</span>
                            </strong>
                            @if (Model != null && Model.Output != null && Model.Output.PageCount > 0)
                            {
                                <span>
                                    (page
                                    @Html.DropDownListFor(x => x.Output.PageNumber, Enumerable.Range(1, Model.Output.PageCount)
                                        .Select(x => new SelectListItem
                                        {
                                            Text = x.ToString(CultureInfo.InvariantCulture),
                                            Value = x.ToString(CultureInfo.InvariantCulture),
                                        }),
                                        new
                                        {
                                            Name = "pageNumber",
                                            data_bind = "value: pageNumber, event: { change: onSearchInputChangeEvent }",
                                            style = "padding: 0; margin: 0; line-height: 16px; height: auto;",
                                        })
                                    of <span>@Model.Output.PageCount</span>)
                                </span>
                            }
                        </div>
                    </div>
                }

                    @* ZERO RESULTS MESSAGE *@
                    @if (Model.Output == null || Model.Output.Items == null || !Model.Output.Items.Any())
                {
                        <p>
                            There are no results that match your search terms.
                        </p>
                }
                else
                {
                        @* RESULTS *@
                        <div>
                            @* TABLE *@
                            <div>
                                <table class="data">
                                    <colgroup>
                                        <col style="vertical-align: top;" />
                                        <col style="vertical-align: top;" />
                                        <col style="vertical-align: top;" />
                                        <col style="vertical-align: top;" />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th>Location</th>
                                            <th>Title</th>
                                            <th>Type</th>
                                            <th>Date</th>
                                        </tr>
                                    </thead>
                                    <tbody class="searchResults">
                                        @foreach (var activity in Model.Output.Items)
                                    {
                                            <tr>
                                                @* LOCATIONS COLUMN *@
                                                <td style="vertical-align: top;">
                                                    <ul style="display: inline-block;">
                                                        @foreach (var place in activity.Places)
                                                    {
                                                            <li class="comma-list"><span>@place.PlaceName</span></li>
                                                    }
                                                    </ul>
                                                </td>

                                                @* TITLE COLUMN *@
                                                <td style="vertical-align: top;">
                                                    <a href="@Url.Action(MVC.Activities.Details(activity.ActivityId))">
                                                        @activity.Title
                                                    </a>
                                                </td>

                                                @* TYPE ICONS COLUMN *@
                                                <td style="vertical-align: top;">
                                                    <table style="border: none;" class="no-data">
                                                        <tr>
                                                            @for (var i = 0; i < activity.Types.Length; i++)
                                                        {
                                                                <td style="border: none; margin: 2px; padding: 2px;">
                                                                    <span style="display: inline-block; width: 32px; text-align: center;">
                                                                        <img title="@activity.Types[i].Text" height="24" src="@Url.HttpRouteUrl(null, new { controller = "EmployeeModuleSettings", action = "GetIcon", typeId = activity.Types[i].TypeId })" alt="" />
                                                                    </span>
                                                                </td>
                                                            //How many columns per row
                                                            if ((i + 1) % 2 == 0)
                                                            {
                                                                @Html.Raw("</tr>")
                                                                @Html.Raw("<tr>")
                                                            }
                                                        }
                                                        </tr>
                                                    </table>
                                                </td>

                                                @* DATES COLUMN *@
                                                <td style="vertical-align: top;">
                                                    @if (activity.StartsOn.HasValue)
                                                {
                                                        <span style="white-space: nowrap">
                                                            @activity.StartsOn.Value.ToString(activity.StartsFormat ?? "MM/dd/yyyy")
                                                            @if (activity.EndsOn.HasValue || (activity.OnGoing.HasValue && activity.OnGoing.Value))
                                                        {
                                                                <text> - </text>
                                                        }
                                                        </span><br />
                                                }
                                                    @if (activity.EndsOn.HasValue)
                                                {
                                                        <span>@activity.EndsOn.Value.ToString(activity.EndsFormat ?? "MM/dd/yyyy")</span>
                                                }
                                                    @if (!activity.StartsOn.HasValue && !activity.EndsOn.HasValue && (!activity.OnGoing.HasValue || !activity.OnGoing.Value))
                                                {
                                                        <span>[Undated]</span>
                                                }
                                                </td>
                                            </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                }
                </div>
            </div>
            <aside class="on-right from-top" data-fixed-scroll="root">
                <div data-fixed-scroll="anchor"></div>
                <div data-fixed-scroll="content">
                    <nav class="side">
                        <ul class="top">
                            <li class="static square-bottom" style="margin-bottom: 0;">
                                <div class="group no-link">
                                    <span class="arrow"></span>
                                    <span class="text">Search Options</span>
                                </div>
                            </li>
                            <li class="static square-bottom">
                                <div class="content">
                                    <div class="field">
                                        @Html.DropDownListFor(x => x.Input.CountryCode, Model.CountryOptions, "[All countries]", new
                                    {
                                        @class = "side",
                                        Name = "countryCode",
                                        data_bind = "value: countryCode, options: countryOptions, optionsCaption: '[All countries]', optionsText: 'text', optionsValue: 'value', event: { change: onSearchInputChangeEvent }"
                                    })
                                    </div>
                                    <div class="field">
                                        @Html.DropDownListFor(x => x.Input.OrderBy,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Sort by title A-Z", Value = "title-asc" },
                                            new SelectListItem { Text = "Sort by title Z-A", Value = "title-desc" },
                                            new SelectListItem { Text = "Sort by location A-Z", Value = "location-asc" },
                                            new SelectListItem { Text = "Sort by location Z-A", Value = "location-desc" },
                                            new SelectListItem { Text = "Sort by type A-Z", Value = "type-asc" },
                                            new SelectListItem { Text = "Sort by type Z-A", Value = "type-desc" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "orderBy",
                                            data_bind = "value: orderBy, event: { change: onSearchInputChangeEvent }"
                                        })
                                    </div>
                                    <div class="field">
                                        @Html.DropDownListFor(x => x.Input.PageSize,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Show 10 results per page", Value = "10" },
                                            new SelectListItem { Text = "Show 20 results per page", Value = "20" },
                                            new SelectListItem { Text = "Show 50 results per page", Value = "50" },
                                            new SelectListItem { Text = "Show 100 results per page", Value = "100" },
                                            new SelectListItem { Text = "Show 250 results per page", Value = "250" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "pageSize",
                                            data_bind = "value: pageSize, event: { change: onSearchInputChangeEvent }"
                                        })
                                    </div>
                                    <div class="field" style="display: none;">
                                        <select class="side">
                                            <option value="table">Table</option>
                                            <option value="list">List</option>
                                        </select>
                                    </div>
                                    <div class="field">
                                        <button class="link" data-xbind="click: prevPage, enable: prevEnabled" disabled="disabled">&lt;&lt; Previous</button>
                                        |
                                        <button class="link" data-xbind="click: nextPage, enable: nextEnabled" disabled="disabled">Next &gt;&gt;</button>
                                        <input type="hidden" value="1" data-xbind="value: pageNumber" />
                                    </div>
                                </div>
                            </li>
                        </ul>

                        <ul class="bottom">
                            <li class="current">
                                <a href="#" class="group">
                                    <span class="arrow"></span>
                                    <span class="text">Table</span>
                                </a>
                            </li>
                            <li>
                                <a href="#" class="group">
                                    <span class="arrow"></span>
                                    <span class="text">Map</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </aside>
        </form>
    </div>
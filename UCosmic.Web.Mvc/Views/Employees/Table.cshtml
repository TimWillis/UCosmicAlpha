@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@model UCosmic.Web.Mvc.Models.ActivitySearchModel
@{
    ViewBag.Title = "Search Activities";
    var jsonSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
}
@section bib
{
    <nav class="bib hide" data-current-bib="search">
        @Html.Partial(MVC.Employees.Views._Bib)
    </nav>
}
@section scripts
{
    <script src="~/scripts/oss/linq.js"></script>
    <script src="~/scripts/viewmodels/activities/Search.js"></script>
    <script>
        var settings = {
            input: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Input, jsonSettings))'),
            countryOptions: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.CountryOptions, jsonSettings))'),
        };
        var viewModel = new Activities.ViewModels.Search(settings);
        viewModel.applyBindings(document.getElementById('activity_search_form'));
    </script>
}
<div class="content fixed to-top" data-current-module="employees">
    <form class="group" method="GET" id="activity_search_form">
        <div class="on-left from-top">
            <header>
                <h1>
                    @ViewBag.Title
                </h1>
            </header>
            <div>
                @* KEYWORD TEXT BOX *@
                <div class="field" style="margin-bottom: 0;">
                    <input type="search" value="@Model.Input.Keyword" placeholder="Find an activity by keyword." name="keyword"
                           data-bind="event: { search: onKeywordInputSearchEvent }" style="width: 588px; margin-right: 12px" />
                    <input type="submit" value="Search" title="Click here or press the enter key to search." />
                </div>
            </div>
        </div>
        <aside class="on-right from-top" data-fixed-scroll="root">
            <div data-fixed-scroll="anchor"></div>
            <div data-fixed-scroll="content">
                <nav class="side">
                    <ul class="top">
                        <li class="static square-bottom" style="margin-bottom: 0;">
                            <div class="group no-link">
                                <span class="arrow"></span>
                                <span class="text">Search Options</span>
                            </div>
                        </li>
                        <li class="static square-bottom">
                            <div class="content">
                                <div class="field">
                                    @Html.DropDownListFor(x => x.Input.CountryCode, Model.CountryOptions, "[All countries]", new
                                    {
                                        @class = "side",
                                        Name = "countryCode",
                                        data_bind = "value: countryCode, options: countryOptions, optionsCaption: '[All countries]', optionsText: 'text', optionsValue: 'value', event: { change: onSearchInputChangeEvent }"
                                    })
                                </div>
                                <div class="field">
                                    @Html.DropDownListFor(x => x.Input.OrderBy,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Sort by title A-Z", Value = "title-asc" },
                                            new SelectListItem { Text = "Sort by title Z-A", Value = "title-desc" },
                                            new SelectListItem { Text = "Sort by location A-Z", Value = "location-asc" },
                                            new SelectListItem { Text = "Sort by location Z-A", Value = "location-desc" },
                                            new SelectListItem { Text = "Sort by type A-Z", Value = "type-asc" },
                                            new SelectListItem { Text = "Sort by type Z-A", Value = "type-desc" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "orderBy",
                                            data_bind = "value: orderBy, event: { change: onSearchInputChangeEvent }"
                                        })
                                </div>
                                <div class="field">
                                    @Html.DropDownListFor(x => x.Input.PageSize,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Show 10 results per page", Value = "10" },
                                            new SelectListItem { Text = "Show 20 results per page", Value = "20" },
                                            new SelectListItem { Text = "Show 50 results per page", Value = "50" },
                                            new SelectListItem { Text = "Show 100 results per page", Value = "100" },
                                            new SelectListItem { Text = "Show 250 results per page", Value = "250" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "pageSize",
                                            data_bind = "value: pageSize, event: { change: onSearchInputChangeEvent }"
                                        })
                                </div>
                                <div class="field" style="display: none;">
                                    <select class="side">
                                        <option value="table">Table</option>
                                        <option value="list">List</option>
                                    </select>
                                </div>
                                <div class="field">
                                    <button class="link" data-xbind="click: prevPage, enable: prevEnabled" disabled="disabled">&lt;&lt; Previous</button>
                                    |
                                    <button class="link" data-xbind="click: nextPage, enable: nextEnabled" disabled="disabled">Next &gt;&gt;</button>
                                    <input type="hidden" value="1" data-xbind="value: pageNumber" />
                                </div>
                            </div>
                        </li>
                    </ul>

                    <ul class="bottom">
                        <li class="current">
                            <a href="#" class="group">
                                <span class="arrow"></span>
                                <span class="text">Table</span>
                            </a>
                        </li>
                        <li>
                            <a href="#" class="group">
                                <span class="arrow"></span>
                                <span class="text">Map</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
    </form>
</div>
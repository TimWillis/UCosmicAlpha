@using System.Globalization
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@using UCosmic.Web.Mvc.Models

@model ActivitySearchModel

@{
    ViewBag.Title = "Search Activities";
    var jsonSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
}



@section bib
{
    <nav class="bib" data-current-bib="search">
        @Html.Partial(MVC.Employees.Views._Bib, new ViewDataDictionary(new { Search = "current" }))
    </nav>
}



@section styles
{
    <style>
        nav.side input[type=text].side {
            height: 20px;
            line-height: 16px;
            font-size: 14px;
            padding: 3px 4px;
            margin: 2px 0;
        }

        .location.combobox.field .k-combobox {
            background: transparent;
            width: 100%;
            height: 20px;
            margin: 1px 0 2px 0;
            overflow: hidden;
            border-radius: 0;
        }

        .location.combobox.field .k-dropdown-wrap {
            height: 18px;
            padding-right: 18px;
        }

            .location.combobox.field .k-dropdown-wrap input.k-input {
                margin: 0;
                padding: 0 0 0 4px;
                height: 18px;
                line-height: 16px;
                font-size: 14px;
            }

            .location.combobox.field .k-dropdown-wrap input::-ms-clear {
                width: 0;
                height: 0;
            }

            .location.combobox.field .k-dropdown-wrap .k-select {
                box-sizing: border-box;
                min-height: 0;
                height: 18px;
                width: 18px;
                border: solid 1px #999;
                border-radius: 0;
            }

                .location.combobox.field .k-dropdown-wrap .k-select .k-icon {
                    margin: 1px 0 0 0;
                    vertical-align: top;
                }

        .k-list-container.k-popup.k-ucosmic {
            border-radius: 0;
            box-shadow: none;
            padding: 0;
            background: #fff;
        }

            .k-list-container.k-popup.k-ucosmic ul.k-list {
                font-family: Arial;
                font-size: 14px;
                border: solid 1px ActiveBorder;
            }

                .k-list-container.k-popup.k-ucosmic ul.k-list li.k-item {
                    min-height: 0;
                    border: 0;
                    border-radius: 0;
                    padding: 1px 5px;
                    line-height: normal;
                    vertical-align: middle;
                    color: #000;
                }

                    .k-list-container.k-popup.k-ucosmic ul.k-list li.k-item.k-state-focused {
                        box-shadow: none;
                        background: #eee;
                        color: #000;
                    }

                    .k-list-container.k-popup.k-ucosmic ul.k-list li.k-item.k-state-hover {
                        box-shadow: none;
                        background: Highlight;
                        color: HighlightText;
                    }
    </style>
}



@section scripts
{
    <script src="~/scripts/oss/linq.js"></script>
    <script src="~/scripts/app/Pager.js"></script>
    <script src="~/scripts/app/Spinner.js"></script>
    <script src="~/scripts/viewmodels/activities/Search.js"></script>
    <script>
        var settings = { @* TODO: put this json stuff into an HTML Helper ($.parseJson('@Json.SerializeObject(Model)')) *@
            input: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Input, jsonSettings).Replace(@"\", @"\\").Replace("'", @"\'"))'),
            output: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Output, jsonSettings).Replace(@"\", @"\\").Replace("'", @"\'"))'),
            @*countryOptions: $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.CountryOptions, jsonSettings).Replace(@"\", @"\\").Replace("'", @"\'"))'),*@
        };
        var viewModel = new Activities.ViewModels.Search(settings);
        viewModel.applyBindings(document.getElementById('activity_search_form'));
    </script>
}



<div class="content fixed to-top" data-current-module="employees">
    <form class="group" method="GET" id="activity_search_form" data-bind="jQuery: '$form'">
        <div class="on-left from-top">
            @* HEADING & PIVOT RADIOS *@
            <div class="group">
                <div class="on-left">
                    <header>
                        <h1>
                            Advanced Search for
                        </h1>
                    </header>
                </div>
                <div class="on-left">
                    @{
                        var activitiesWeight = Model.Input.Pivot != ActivitySearchPivot.People ? "bold" : "normal";
                        var peopleWeight = Model.Input.Pivot == ActivitySearchPivot.People ? "bold" : "normal";
                    }
                    <label style="cursor: pointer; display: inline-block; background-color: #ddd; padding: 4px 8px; border-radius: 4px; border: solid 1px #999; text-align: center; margin-left: 12px; min-width: 95px; font-weight: @activitiesWeight;"
                           data-bind="style: { 'font-weight': isActivitiesChecked() ? 'bold' : 'normal' }">
                        <input type="radio" name="pivot" value="@((int)ActivitySearchPivot.Activities)" checked="@(Model.Input.Pivot != ActivitySearchPivot.People ? "checked" : null)"
                               data-bind="checked: pivot" style="cursor: pointer;" />
                        Activities
                    </label>
                    <label style="cursor: pointer; display: inline-block; background-color: #ddd; padding: 4px 8px; border-radius: 4px; border: solid 1px #999; text-align: center; margin-left: 12px; min-width: 75px; font-weight: @peopleWeight;"
                           data-bind="style: { 'font-weight': isPeopleChecked() ? 'bold' : 'normal' }">
                        <input type="radio" name="pivot" value="@((int)ActivitySearchPivot.People)" checked="@(Model.Input.Pivot == ActivitySearchPivot.People ? "checked" : null)"
                               data-bind="checked: pivot" style="cursor: pointer;" />
                        People
                    </label>
                </div>
                <div class="on-right" style="margin-top: 8px;">
                    <a href="@Url.Action(MVC.Employees.Table(Model.Domain, null))" class="restore-underline">Reset search</a>
                </div>
            </div>

            @* KEYWORD TEXT BOX *@
            <table style="border: none; border-collapse: collapse; width: 100%;">
                <tr>
                    <td style="width: 95%;">
                        <div class="field" style="margin-bottom: 0;">
                            <input type="search" value="@Model.Input.Keyword" placeholder="Find an activity by keyword." name="keyword"
                                   data-bind="event: { search: onKeywordInputSearchEvent }" xstyle="width: 550px; margin-right: 12px" />
                        </div>
                    </td>
                    <td style="text-align: right;">
                        <div class="field" style="margin-bottom: 0; margin-left: 12px;">
                            <input type="submit" value="Search" title="Click here or press the enter key to search." style="margin-right: 0;" />
                        </div>
                    </td>
                </tr>
            </table>

            @* PAGER STATUS *@
            @if (Model != null && Model.Output.Items.Any())
            {
                <div style="height: 24px; margin: 1em 0;">
                    <strong>
                        Showing <span>@Model.Output.FirstNumber</span>
                        @if (@Model.Output.PageCount > 0)
                        {
                            <span>- <span>@Model.Output.LastNumber</span></span>
                        }
                        of <span>@Model.Output.ItemTotal</span>
                    </strong>
                    @if (Model != null && Model.Output != null && Model.Output.PageCount > 0)
                    {
                        <span>
                            (page
                            @Html.DropDownListFor(x => x.Output.PageNumber, Enumerable.Range(1, Model.Output.PageCount)
                                .Select(x => new SelectListItem
                                {
                                    Text = x.ToString(CultureInfo.InvariantCulture),
                                    Value = x.ToString(CultureInfo.InvariantCulture),
                                }),
                                new
                                {
                                    Name = "pageNumber",
                                    data_bind = "value: pager.input.pageNumberText",
                                    style = "padding: 0; margin: 0; line-height: 16px; height: auto;",
                                })
                            of <span>@Model.Output.PageCount</span>)
                        </span>
                    }
                    <span style="margin-left: 12px; display: none;" data-bind="visible: loadingSpinner.isVisible">
                        <img src="~/images/icons/spinner/spinner-20-blue.gif" alt="" />
                        Loading...
                    </span>
                </div>
            }

                @* ZERO RESULTS MESSAGE *@
                @if (Model.Output == null || Model.Output.Items == null || !Model.Output.Items.Any())
                {
                    <p>
                        There are no results that match your search terms.
                    </p>
                }
                else
                {
                    var activitiesDisplay = Model.Input.Pivot != ActivitySearchPivot.People ? "table" : "none";
                    var peopleDisplay = Model.Input.Pivot == ActivitySearchPivot.People ? "table" : "none";

                    @* ACTIVITY RESULTS TABLE *@
                    <table class="data" style="display: @activitiesDisplay;" data-bind="visible: isActivitiesChecked">
                        <colgroup>
                            <col style="vertical-align: top;" />
                            <col style="vertical-align: top;" />
                            <col style="vertical-align: top;" />
                            <col style="vertical-align: top;" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th>Location(s)</th>
                                <th>Activity Title</th>
                                <th>Type(s)</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                        <tbody class="searchResults">
                            @foreach (var activity in Model.Output.Items)
                            {
                                <tr>
                                    @* LOCATIONS COLUMN *@
                                    <td style="vertical-align: top; min-width: 120px;">
                                        <ul style="display: inline-block;">
                                            @foreach (var place in activity.Places)
                                            {
                                                <li class="comma-list"><span>@place.PlaceName</span></li>
                                            }
                                        </ul>
                                    </td>

                                    @* TITLE COLUMN *@
                                    <td style="vertical-align: top;">
                                        <a href="@Url.Action(MVC.Activities.Details(activity.ActivityId))">
                                            @activity.Title
                                        </a>
                                        - @activity.Owner.DisplayName
                                    </td>

                                    @* TYPE ICONS COLUMN *@
                                    <td style="vertical-align: top;">
                                        <table style="border: none;" class="no-data">
                                            <tr>
                                                @for (var i = 0; i < activity.Types.Length; i++)
                                                {
                                                    <td style="border: none; margin: 2px; padding: 2px;">
                                                        <span style="display: inline-block; width: 32px; text-align: center;">
                                                            <img title="@activity.Types[i].Text" height="24"
                                                                 src="@Url.HttpRouteUrl(null, new {controller = "EmployeeModuleSettings", action = "GetIcon", typeId = activity.Types[i].TypeId})" alt="" />
                                                        </span>
                                                    </td>
                                                    //How many columns per row
                                                    if ((i + 1) % 2 == 0)
                                                    {
                                                        Html.Raw("</tr>");
                                                        Html.Raw("<tr>");
                                                    }
                                                }
                                            </tr>
                                        </table>
                                    </td>

                                    @* DATES COLUMN *@
                                    <td style="vertical-align: top;">
                                        @{Html.RenderPartial(MVC.Employees.Views._ActivityDatesDisplay, activity);}
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @* PEOPLE RESULTS TABLE *@
                    <table class="data" style="display: @peopleDisplay;" data-bind="visible: isPeopleChecked">
                        <colgroup>
                            <col style="vertical-align: top;" />
                            <col style="vertical-align: top;" />
                            <col style="vertical-align: top;" />
                            <col style="vertical-align: top;" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th>Who</th>
                                <th>What</th>
                                <th>Where</th>
                                <th>When</th>
                            </tr>
                        </thead>
                        <tbody class="searchResults">
                            @foreach (var activity in Model.Output.Items)
                            {
                                <tr>
                                    @* PERSON COLUMN *@
                                    <td style="vertical-align: top; min-width: 120px;">
                                        <a href="@Url.Action(MVC.People.Activities(activity.Owner.PersonId, null))">
                                            @activity.Owner.LastCommaFirst
                                        </a>
                                    </td>

                                    @* TITLE COLUMN *@
                                    <td style="vertical-align: top;">
                                        <a href="@Url.Action(MVC.Activities.Details(activity.ActivityId))">
                                            @activity.Title
                                        </a>
                                        @if (activity.Types.Any())
                                        {
                                            <ul style="display: inline;">
                                                @foreach (var type in activity.Types)
                                                {
                                                    <li style="display: inline;">
                                                        <img style="vertical-align: top; margin-left: 4px; margin-top: 2px; max-width: 16px;" title="@type.Text" height="16"
                                                             src="@Url.HttpRouteUrl(null, new {controller = "EmployeeModuleSettings", action = "GetIcon", typeId = type.TypeId})" alt="(@type.Text)" />
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </td>

                                    @* LOCATIONS COLUMN *@
                                    <td style="vertical-align: top; min-width: 120px;">
                                        <ul style="display: inline-block;">
                                            @foreach (var place in activity.Places)
                                            {
                                                <li class="comma-list"><span>@place.PlaceName</span></li>
                                            }
                                        </ul>
                                    </td>

                                    @* DATES COLUMN*@
                                    <td style="vertical-align: top;">
                                        @{Html.RenderPartial(MVC.Employees.Views._ActivityDatesDisplay, activity);}
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <aside class="on-right from-top" data-fixed-scroll="root">
                <div data-fixed-scroll="anchor"></div>
                <div data-fixed-scroll="content">
                    <nav class="side">
                        <ul class="top">
                            <li class="static square-bottom" style="margin-bottom: 0;">
                                <div class="group">
                                    <div class="on-left"></div>
                                </div>
                                <div class="group no-link">
                                    <span class="arrow"></span>
                                    <span class="text">
                                        Search Options
                                        <img src="~/images/icons/spinner/spinner-20-blue-on-ddd.gif" alt=""
                                             style="margin-left: 4px; display: none;" data-bind="visible: loadingSpinner.isVisible" />
                                    </span>
                                </div>
                            </li>
                            <li class="static square-bottom">
                                <div class="content">
                                    @* LOCATION AUTOCOMPLETE *@
                                    <div class="location combobox field">
                                        <input name="placeNames" type="text" placeholder="[Enter location]" data-bind="jQuery: '$location'"
                                               value="@(Model.Input.PlaceNames != null && Model.Input.PlaceNames.Any() ? Model.Input.PlaceNames.First() : "")"
                                               class="side" />
                                        <input name="placeIds" type="hidden" data-bind="jQuery: '$placeIds'"
                                               value="@(Model.Input.PlaceIds != null && Model.Input.PlaceIds.Any() ? Model.Input.PlaceIds.First() : (int?)null)" />
                                    </div>

                                    @* COUNTRY DROPDOWN *@
                                    @*<div class="field">
                                            @Html.DropDownListFor(x => x.Input.CountryCode, Model.CountryOptions, "[All countries]", new
                                            {
                                                @class = "side",
                                                Name = "countryCode",
                                                data_bind = "value: countryCode, options: countryOptions, optionsCaption: '[All countries]', optionsText: 'text', optionsValue: 'value'"
                                            })
                                        </div>*@

                                    @* SORT DROPDOWN *@
                                    <div class="field">
                                        @Html.DropDownListFor(x => x.Input.OrderBy,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Sort with most recent at top", Value = "recency-desc" },
                                            new SelectListItem { Text = "Sort with most recent at bottom", Value = "recency-asc" },
                                            new SelectListItem { Text = "Sort by activity title A-Z", Value = "title-asc" },
                                            new SelectListItem { Text = "Sort by activity title Z-A", Value = "title-desc" },
                                            new SelectListItem { Text = "Sort by location A-Z", Value = "location-asc" },
                                            new SelectListItem { Text = "Sort by location Z-A", Value = "location-desc" },
                                            new SelectListItem { Text = "Sort by person last name A-Z", Value = "lastname-asc" },
                                            new SelectListItem { Text = "Sort by person last name Z-A", Value = "lastname-desc" },
                                            new SelectListItem { Text = "Sort by type A-Z", Value = "type-asc" },
                                            new SelectListItem { Text = "Sort by type Z-A", Value = "type-desc" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "orderBy",
                                            data_bind = "value: orderBy"
                                        })
                                    </div>

                                    @* PAGE SIZE DROPDOWN *@
                                    <div class="field">
                                        @Html.DropDownListFor(x => x.Input.PageSize,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Show 10 results per page", Value = "10" },
                                            new SelectListItem { Text = "Show 20 results per page", Value = "20" },
                                            new SelectListItem { Text = "Show 50 results per page", Value = "50" },
                                            new SelectListItem { Text = "Show 100 results per page", Value = "100" },
                                            new SelectListItem { Text = "Show 250 results per page", Value = "250" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "pageSize",
                                            data_bind = "value: pager.input.pageSizeText"
                                        })
                                    </div>

                                    @* PREV & NEXT PAGER BUTTONS *@
                                    <div class="field" data-bind="with: pager.input">
                                        <button class="link" data-bind="click: prev, enable: prevAllowed" disabled="disabled">&lt;&lt; Previous</button>
                                        |
                                        <button class="link" data-bind="click: next, enable: nextAllowed" disabled="disabled">Next &gt;&gt;</button>
                                    </div>
                                </div>
                            </li>
                        </ul>

                        <ul class="bottom">
                            <li class="current">
                                <a href="#" class="group">
                                    <span class="arrow"></span>
                                    <span class="text">Table</span>
                                </a>
                            </li>
                            <li>
                                <a href="#" class="group">
                                    <span class="arrow"></span>
                                    <span class="text">Map</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </aside>
        </form>
    </div>
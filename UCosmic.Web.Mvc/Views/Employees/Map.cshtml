@using UCosmic.Web.Mvc.Models

@model ActivitySearchModel

@{
    ViewBag.Title = "Search Activities";
}



@section bib
{
    <nav class="bib">
        @Html.Partial(MVC.Employees.Views._Bib, new EmployeesBibNavModel { Activities = true })
    </nav>
}



@section styles
{
    <link href="~/styles/sass/sheets/employees/activities-table.css" rel="stylesheet" />
}



@section scripts
{
    <script src="~/scripts/oss/linq.js"></script>
    <script src="~/scripts/app/Pager.js"></script>
    <script src="~/scripts/app/Spinner.js"></script>
    <script>
        @{ Html.RenderPartial(MVC.JavaScriptRoutes.Views.Places); }
    </script>
    <script src="~/scripts/viewmodels/activities/Search.js"></script>
    <script src="~/scripts/viewmodels/activities/Map.js"></script>
    <script>
        var settings = {
            input: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.Input))'),
            output: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.Output))'),
            activityTypes: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.ActivityTypes))'),
        };
        var viewModel = new Activities.ViewModels.Map(settings);
        viewModel.applyBindings(document.getElementById('activity_search_form'));
    </script>
}



<div class="content fixed to-top" data-current-module="employees">
    <form class="group" method="GET" id="activity_search_form" data-bind="jQuery: '$form'">
        <div class="on-left from-top">
            @* HEADING & PIVOT RADIOS *@
            <div class="group">
                <div class="on-left">
                    <header>
                        <h1>
                            Advanced Search for
                        </h1>
                    </header>
                </div>
                <div class="on-left">
                    @{
                        var activitiesWeight = Model.Input.Pivot != ActivitySearchPivot.People ? "checked" : null;
                        var peopleWeight = Model.Input.Pivot == ActivitySearchPivot.People ? "checked" : null;
                    }
                    <label class="activities-pivot @activitiesWeight"
                           data-bind="css: { checked: isActivitiesChecked }">
                        <input type="radio" name="pivot" value="@((int)ActivitySearchPivot.Activities)" checked="@(Model.Input.Pivot != ActivitySearchPivot.People ? "checked" : null)"
                               data-bind="checked: pivot" style="cursor: pointer;" />
                        Activities
                    </label>
                    <label class="activities-pivot @peopleWeight"
                           data-bind="css: { checked: isPeopleChecked }">
                        <input type="radio" name="pivot" value="@((int)ActivitySearchPivot.People)" checked="@(Model.Input.Pivot == ActivitySearchPivot.People ? "checked" : null)"
                               data-bind="checked: pivot" style="cursor: pointer;" />
                        People
                    </label>
                </div>
                <div class="on-right" style="margin-top: 8px;">
                    <a href="@Url.Action(MVC.Employees.Table(Model.Domain, null))" class="restore-underline">Reset search</a>
                </div>
            </div>

            @* KEYWORD TEXT BOX *@
            <table style="border: none; border-collapse: collapse; width: 100%;">
                <tr>
                    <td style="width: 95%;">
                        <div class="field" style="margin-bottom: 0;">
                            <input type="search" value="@Model.Input.Keyword" placeholder="Narrow all displayed activities by keyword" name="keyword"
                                   data-bind="event: { search: onKeywordInputSearchEvent }" xstyle="width: 550px; margin-right: 12px" />
                        </div>
                    </td>
                    <td style="text-align: right;">
                        <div class="field" style="margin-bottom: 0; margin-left: 12px;">
                            <input type="submit" value="Search" title="Click here or press the enter key to search." style="margin-right: 0;" />
                        </div>
                    </td>
                </tr>
            </table>

            <p>
                We're still working on the activities interactive map lens. Please check back again soon.
            </p>
            <p>
                In the meantime, you can <a href="@Url.Action(MVC.Employees.TenantIndex(Model.Domain))">click here for activity global snapshot charts</a>
                or <a href="@Url.Action(MVC.Employees.Table(Model.Domain, null))">click here for an advanced activity search</a>.
            </p>
        </div>
        <aside class="on-right from-top" data-fixed-scroll="root">
            <div data-fixed-scroll="anchor"></div>
            <div data-fixed-scroll="content">
                <nav class="side">
                    <ul class="top">
                        <li class="static square-bottom" style="margin-bottom: 0;">
                            <div class="group">
                                <div class="on-left"></div>
                            </div>
                            <div class="group no-link">
                                <span class="arrow"></span>
                                <span class="text">
                                    Common Search Options
                                    <img src="~/images/icons/spinner/spinner-20-blue-on-ddd.gif" alt=""
                                         style="margin-left: 4px; display: none;" data-bind="visible: loadingSpinner.isVisible" />
                                </span>
                            </div>
                        </li>
                        <li class="static square-bottom">
                            <div class="content">
                                @* LOCATION AUTOCOMPLETE *@
                                <div class="location combobox field">
                                    <input name="placeNames" type="text" placeholder="[Find by location]" data-bind="jQuery: '$location'"
                                           value="@(Model.Input.PlaceNames != null && Model.Input.PlaceNames.Any() ? Model.Input.PlaceNames.First() : "")"
                                           class="side" />
                                    <input name="placeIds" type="hidden" data-bind="jQuery: '$placeIds'"
                                           value="@(Model.Input.PlaceIds != null && Model.Input.PlaceIds.Any() ? Model.Input.PlaceIds.First() : (int?)null)" />
                                </div>

                                @* ACTIVITY TYPE CHECKBOXES *@
                                @if (Model.ActivityTypes != null && Model.ActivityTypes.Any())
                                {
                                    <div class="field" style="margin-top: 12px;">
                                        <strong>Find by activity type</strong>
                                        <ol style="color: #000; font-size: 13px; margin-top: 4px;">
                                            @for (var i = 0; i < Model.ActivityTypes.Count(); i++)
                                            {
                                                var activityType = Model.ActivityTypes.ElementAt(i);
                                                var isChecked = Model.Input.ActivityTypeIds == null ||
                                                                !Model.Input.ActivityTypeIds.Any() ||
                                                                Model.Input.ActivityTypeIds.Contains(activityType.ActivityTypeId)
                                                    ? "checked" : null;
                                                var checkBoxId = string.Format("activity_type_checkbox_{0}", Guid.NewGuid());
                                                <li>
                                                    <div class="group">
                                                        <div class="on-left">
                                                            <label style="cursor: pointer;" data-bind="with: activityTypeCheckBoxes()[@i]">
                                                                <input type="checkbox" id="@checkBoxId"
                                                                       name="activityTypeIds" value="@activityType.ActivityTypeId" checked="@isChecked"
                                                                       style="cursor: pointer;" data-bind="checked: isChecked" />
                                                                <img title="@activityType.Text" width="14" alt="" style="margin-top: -6px; cursor: pointer;"
                                                                     src="@Url.HttpRouteUrl(null, new { controller = "EmployeeModuleSettings", action = "GetIcon", typeId = activityType.ActivityTypeId })" />
                                                            </label>
                                                        </div>
                                                        <div class="on-left" style="width: 180px; margin-left: 4px; margin-top: -2px;">
                                                            <label style="cursor: pointer; vertical-align: top;" for="@checkBoxId">
                                                                @activityType.Text
                                                            </label>
                                                        </div>
                                                    </div>
                                                </li>
                                            }
                                        </ol>
                                        <div style="margin-top: 4px;">
                                            <input type="submit" value="Search"
                                                   style="font-size: 14px; line-height: normal; padding: 4px 8px; margin-right: 4px;" />
                                            @{ var checkAllDisabled = Model.Input.ActivityTypeIds == null || !Model.Input.ActivityTypeIds.Any()
                                                || Model.Input.ActivityTypeIds.All(x => Model.ActivityTypes.Select(y => y.ActivityTypeId).Contains(x))
                                                    ? "disabled" : null; }
                                            <button type="button" class="link"
                                                    data-bind="click: checkAllActivityTypes, disable: isCheckAllActivityTypesDisabled"
                                                    style="font-size: 14px; line-height: normal; margin-right: 4px;" disabled="@checkAllDisabled">
                                                Check all
                                            </button>
                                            <button type="button" class="link"
                                                    data-bind="click: uncheckAllActivityTypes, disable: isUncheckAllActivityTypesDisabled"
                                                    style="font-size: 14px; line-height: normal;">
                                                Uncheck all
                                            </button>
                                        </div>
                                    </div>
                                }

                                @* DATE FIELDS *@
                                <div class="dates picker field" style="margin-top: 12px;">
                                    <strong>Find by date(s)</strong>
                                    <div class="group">
                                        <div class="on-left" style="width: 110px;">
                                            <input type="text" name="Since" placeholder="[From]" class="side" value="@Model.Input.Since" data-role="datepicker"
                                                   data-bind="value: since, valueUpdate: 'afterkeydown', jQuery: '$since'" />
                                        </div>
                                        <div class="on-right" style="width: 110px;">
                                            <input type="text" name="Until" placeholder="[To]" class="side" value="@Model.Input.Until" data-role="datepicker"
                                                   data-bind="value: until, valueUpdate: 'afterkeydown', jQuery: '$until'" />
                                        </div>
                                    </div>
                                    <div style="font-size: 12px; color: #555;">
                                        YYYY or M/YYYY or M/D/YYYY
                                    </div>
                                    <div style="color: #000; font-size: 13px; line-height: 13px; margin-top: 4px;">
                                        @{
                                            var includeUndated = Model.Input.IncludeUndated == null ||
                                                            Model.Input.IncludeUndated.Value
                                                ? "checked" : null;
                                        }
                                        <label style="cursor: pointer; vertical-align: top;">
                                            <input type="checkbox" name="includeUndated" checked="@includeUndated" value="true" style="cursor: pointer;" /> Include undated activities
                                            <input type="hidden" name="includeUndated" value="false" />
                                        </label>
                                    </div>
                                    <div style="margin-top: 8px">
                                        @{
                                            var clearSinceDisabled = string.IsNullOrWhiteSpace(Model.Input.Since) ? "disabled" : null;
                                            var clearUntilDisabled = string.IsNullOrWhiteSpace(Model.Input.Until) ? "disabled" : null;
                                        }
                                        <input type="submit" value="Search" style="font-size: 14px; line-height: normal; padding: 4px 8px; margin-right: 4px;" />
                                        <button type="button" class="link"
                                                data-bind="click: clearSince, disable: isClearSinceDisabled"
                                                disabled="@clearSinceDisabled"
                                                style="font-size: 14px; line-height: normal; margin-right: 4px;">
                                            Clear from
                                        </button>
                                        <button type="button" class="link"
                                                data-bind="click: clearUntil, disable: isClearUntilDisabled"
                                                disabled="@clearUntilDisabled"
                                                style="font-size: 14px; line-height: normal;">
                                            Clear to
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                    <ul class="bottom">
                        <li>
                            <a href="@Url.Action(MVC.Employees.TenantIndex(Model.Domain))" class="group">
                                <span class="arrow"></span>
                                <span class="text">Global Snapshot</span>
                            </a>
                        </li>
                        <li>
                            @{
                                var tableUrl = Url.Action(MVC.Employees.Table());
                                if (Request.QueryString != null && !string.IsNullOrWhiteSpace(Request.QueryString.ToString()))
                                {
                                    tableUrl = string.Format("{0}?{1}", tableUrl, Request.QueryString);
                                }
                            }
                            <a href="@tableUrl" class="group">
                                <span class="arrow"></span>
                                <span class="text">Advanced Search (Table)</span>
                            </a>
                        </li>
                        <li class="current">
                            <a class="group">
                                <span class="arrow"></span>
                                <span class="text">Advanced Search (Map)</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
    </form>
</div>